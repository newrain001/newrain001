<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>nfs 网络文件系统</title>
      <link href="2020/12/04/NFS%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
      <url>2020/12/04/NFS%E7%BD%91%E7%BB%9C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">（Network File System）即网络文件系统，它允许网络中的不同计算机相互之间共享资源。NFS客户端可以透明地读写远程NFS服务器上的文件，就像访问本地文件一样。</span><br><span class="line"></span><br><span class="line">NFS是1980年由SUN发展出来在UNIX&amp;Linux系统间实现文件共享的一种方法。它支持应用程序在客户端通过网络存取位于服务器磁盘中的数据。</span><br><span class="line">   NFS只提供网络文件共享功能，不提供数据传输的功能。需要借助RPC(Remote Procedure Calls)远程过程调用协议实现数据传输。</span><br><span class="line">   NFS服务器自开启服务之后一直处于等待状态，由NFS客户端建立过程调用请求，将调用参数发送到远程NFS服务器，并等待响应。当请求到达远程NFS服务器后，NFS服务器处理客户端的请求，调用指定的程序，并将结果返回NFS客户端。NFS服务器上的目录如果可以被过程用户访问，就称为导出（export）；客户主机访问服务器导出目录的过程称为挂载（mount）或导入（import）。</span><br><span class="line">NFS的工作流程</span><br><span class="line">   步骤1：首先用户访问NFS共享资源，由程序在NFS客户端上发出NFS文件存取功能的询问请求，这时NFS客户端（即执行程序的服务器）RPC服务（portmap 或rpcbind服务）就会通过网络向NFS服务端的RPC服务（即portmap或rpcbind服务）的111端口发出NFS文件存取功能的询问请求。</span><br><span class="line">   步骤2：NFS服务端的RPC服务（即portmap或rpcbind服务）找到对应的已注册的NFSdaemon端口后，通知NFS客户端的RPC服务（即portmap或rpcbind服务）。</span><br><span class="line">   步骤3：此时NFS客户端就可获取到正确的端口，然后就直接与NFS daemon联机存取数据了。</span><br><span class="line">   步骤4：NFS客户端把数据存取成功后，告诉用户存取结果。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="部署nfs服务端"><a href="#部署nfs服务端" class="headerlink" title="部署nfs服务端"></a>部署nfs服务端</h2><ol><li>安装包<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum -y install nfs-utils rpcbind</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li>启动服务，并做开机启动<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@nfs_server ~]# systemctl enable rpcbind</span><br><span class="line">[root@nfs_server ~]# systemctl enable nfs-server</span><br><span class="line">Created symlink from &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;multi-user.target.wants&#x2F;nfs-server.service to &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;nfs-server.service.</span><br><span class="line">[root@nfs_server ~]# systemctl enable nfs-lock</span><br><span class="line">[root@nfs_server ~]# systemctl enable nfs-idmap</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@nfs_server ~]# systemctl start rpcbind</span><br><span class="line">[root@nfs_server ~]# systemctl start nfs-server</span><br><span class="line">[root@nfs_server ~]# systemctl start nfs-lock</span><br><span class="line">[root@nfs_server ~]# systemctl start nfs-idmap</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><p>3.创建共享目录，并修改权限</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@nfs_server ~]# mkdir -p &#x2F;application&#x2F;share            </span><br><span class="line">[root@nfs_server ~]# chmod -R 777 &#x2F;application&#x2F;share  </span><br></pre></td></tr></table></figure><p>4.配置共享目录</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@nfs_server ~]# echo &quot;&#x2F;application&#x2F;share 192.168.0.*(rw,sync,no_root_squash)&quot; &gt;&gt; &#x2F;etc&#x2F;exports</span><br><span class="line">[root@nfs_server ~]# exportfs -a</span><br><span class="line">使exports的修改生效</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>5.检查配置是否设置正确</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@nfs_server &#x2F;]# showmount -e</span><br><span class="line">Export list for nfs_server:</span><br><span class="line">&#x2F;application&#x2F;share 192.168.0.*</span><br></pre></td></tr></table></figure><h2 id="部署nfs客户端"><a href="#部署nfs客户端" class="headerlink" title="部署nfs客户端"></a>部署nfs客户端</h2><p>1.安装包</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@nfs_client ~]# yum -y install nfs-utils</span><br></pre></td></tr></table></figure><p>2.检查共享目录是否正确</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@nfs_client ~]# showmount -e 192.168.0.240</span><br><span class="line">Export list for 192.168.0.240:</span><br><span class="line">&#x2F;application&#x2F;share 192.168.0.*</span><br></pre></td></tr></table></figure><p>3.创建一个挂载点</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@nfs_client ~]# mkdir -p &#x2F;application&#x2F;share</span><br></pre></td></tr></table></figure><p>4.挂载</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@nfs_client ~]# mount -t nfs 192.168.0.240:&#x2F;application&#x2F;share &#x2F;application&#x2F;share</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>5.永久挂载</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;fstab</span><br><span class="line"></span><br><span class="line">添加   192.168.0.240:&#x2F;application&#x2F;share &#x2F;application&#x2F;share nfs defaults 0 0</span><br></pre></td></tr></table></figure><p>挂载格式解读：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mount -t nfs -o nolock,vers&#x3D;2 10.0.0.147:&#x2F;work&#x2F;nfs &#x2F;mnt</span><br><span class="line"></span><br><span class="line">解释一下：</span><br><span class="line">mount :挂载命令</span><br><span class="line">nfs :使用的协议</span><br><span class="line">nolock :不阻塞</span><br><span class="line">vers : 使用的NFS版本号</span><br><span class="line">IP : NFS服务器的IP（NFS服务器运行在哪个系统上，就是哪个系统的IP）</span><br><span class="line">&#x2F;work&#x2F;nfs: 要挂载的目录（Ubuntu的目录）</span><br><span class="line">&#x2F;mnt : 要挂载到的目录（开发板上的目录，注意挂载成功后，&#x2F;mnt下原有数据将会被隐藏，无法找到）</span><br><span class="line"></span><br><span class="line">取消挂载(先df -h 查看分区挂载情况)</span><br><span class="line">[root@localhost local]# umount 192.168.0.240:&#x2F;application&#x2F;share</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 存储 </category>
          
          <category> operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件系统 </tag>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NMAP 嗅探工具</title>
      <link href="2020/12/04/NMAP_%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E8%AF%A6%E8%A7%A3/"/>
      <url>2020/12/04/NMAP_%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="NMAP"><a href="#NMAP" class="headerlink" title="NMAP"></a>NMAP</h1><p>@[toc]</p><blockquote><blockquote><p>nmap是一个网络连接端扫描软件，用来扫描网上电脑开放的网络连接端。确定哪些服务运行在哪些连接端，并且推断计算机运行哪个操作系统（这是亦称 fingerprinting）。它是网络管理员必用的软件之一，以及用以评估网络系统安全。</p></blockquote><blockquote><p>正如大多数被用于网络安全的工具，nmap 也是不少黑客及骇客（又称脚本小子）爱用的工具 。系统管理员可以利用nmap来探测工作环境中未经批准使用的服务器，但是黑客会利用nmap来搜集目标电脑的网络设定，从而计划攻击的方法。</p></blockquote><blockquote><p>Nmap 常被跟评估系统漏洞软件Nessus 混为一谈。Nmap 以隐秘的手法，避开闯入检测系统的监视，并尽可能不影响目标系统的日常操作。</p></blockquote></blockquote><h3 id="nmap-简单扫描"><a href="#nmap-简单扫描" class="headerlink" title="nmap 简单扫描"></a>nmap 简单扫描</h3><blockquote><p>nmap默认发送一个ARP的PING数据包，来探测目标主机1-10000范围内所开放的所有端口<br>命令语法：<br>nmap &lt;target ip address&gt;<br>其中：target ip address是扫描的目标主机的ip地址<br>-vv 详细显示返回信息<br><img src="https://img-blog.csdnimg.cn/20201130115920871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05ld1JhaW5fd2FuZw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020113013571283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05ld1JhaW5fd2FuZw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></blockquote><h3 id="nmap-指定端口扫描"><a href="#nmap-指定端口扫描" class="headerlink" title="nmap 指定端口扫描"></a>nmap 指定端口扫描</h3><blockquote><p>命令语法：nmap -p(port1,port2,…)  &lt;target IP&gt;<br>介绍：port1,port2…为想要扫描的端口号<br><img src="https://img-blog.csdnimg.cn/20201130140028904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05ld1JhaW5fd2FuZw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></blockquote><h3 id="nmap-ping-扫描-发现主机"><a href="#nmap-ping-扫描-发现主机" class="headerlink" title="nmap ping 扫描(发现主机)"></a>nmap ping 扫描(发现主机)</h3><blockquote><p>nmap可以利用类似windows/linux系统下的ping 方式进行扫描<br>命令语法： nmap -sP &lt;target ip&gt;<br><img src="https://img-blog.csdnimg.cn/20201130140236109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05ld1JhaW5fd2FuZw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201130140246208.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05ld1JhaW5fd2FuZw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></blockquote><h3 id="nmap-路由跟踪"><a href="#nmap-路由跟踪" class="headerlink" title="nmap 路由跟踪"></a>nmap 路由跟踪</h3><blockquote><p>nmap –traceroute &lt;target IP&gt;<br><img src="https://img-blog.csdnimg.cn/20201130140822924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05ld1JhaW5fd2FuZw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></blockquote><h3 id="nmap-操作系统探测"><a href="#nmap-操作系统探测" class="headerlink" title="nmap 操作系统探测"></a>nmap 操作系统探测</h3><blockquote><p>nmap -O &lt;target ip&gt;<br><img src="https://img-blog.csdnimg.cn/2020113014153976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05ld1JhaW5fd2FuZw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></blockquote><h3 id="nmap-万能开关"><a href="#nmap-万能开关" class="headerlink" title="nmap 万能开关"></a>nmap 万能开关</h3><blockquote><p>包含了1-10000端口ping扫描，操作系统扫描，脚本扫描，路由跟踪，服务探测<br>命令语法： nmap -A &lt;target ip&gt;<br><img src="https://img-blog.csdnimg.cn/20201130143109942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05ld1JhaW5fd2FuZw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></blockquote><h3 id="nmap-版本检测"><a href="#nmap-版本检测" class="headerlink" title="nmap 版本检测"></a>nmap 版本检测</h3><blockquote><p>nmap -sV &lt;target ip&gt;<br><img src="https://img-blog.csdnimg.cn/20201130143537809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05ld1JhaW5fd2FuZw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> operations </category>
          
          <category> 极客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 极客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis 部署及使用</title>
      <link href="2020/12/04/REDIS_%E5%AE%9E%E6%88%98/"/>
      <url>2020/12/04/REDIS_%E5%AE%9E%E6%88%98/</url>
      
        <content type="html"><![CDATA[<h1 id="redis-数据库基于lamp架构"><a href="#redis-数据库基于lamp架构" class="headerlink" title="redis 数据库基于lamp架构"></a>redis 数据库基于lamp架构</h1><h5 id="部署环境"><a href="#部署环境" class="headerlink" title="部署环境"></a>部署环境</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 部署redis 环境</span></span><br><span class="line">[root@redis-master ~]# mkdir -p /data/application     ---创建工作目录</span><br><span class="line">[root@redis-master ~]# wget http://download.redis.io/releases/redis-4.0.9.tar.gz   ---下载redis</span><br><span class="line">[root@redis-master ~]# tar xzf redis-4.0.9.tar.gz -C /data/application/    ---解压</span><br><span class="line">[root@redis-master ~]# cd /data/application/</span><br><span class="line">[root@redis-master application]# mv redis-4.0.9/ redis </span><br><span class="line">[root@redis-master application]# cd redis/</span><br><span class="line">[root@redis-master redis]# yum install -y gcc make  #安装编译工具</span><br><span class="line">[root@redis-master redis]# make</span><br><span class="line">注：如果报错请将刚才解压的安装包删除掉，再次重新解压并进行make安装即可。</span><br><span class="line">[root@redis-master redis]# cp redis.conf redis.conf.bak</span><br><span class="line">[root@redis-master redis]# vim redis.conf     ---修改如下</span><br><span class="line">bind 192.168.246.202　　#只监听内网IP</span><br><span class="line">daemonize yes　　　　　#开启后台模式将on改为yes</span><br><span class="line">timeout 300　　　　　　#连接超时时间</span><br><span class="line">port 6379                      #端口号</span><br><span class="line">dir /data/application/redis/data　　#本地数据库存放持久化数据的目录该目录-----需要存在</span><br><span class="line">pidfile /var/run/redis_6379.pid　　#定义pid文件</span><br><span class="line">logfile /var/log/redis.log　　#定义log文件</span><br><span class="line">创建存放数据的目录</span><br><span class="line">[root@redis-master redis]# mkdir /data/application/redis/data</span><br><span class="line">配置redis为systemctl启动</span><br><span class="line">[root@redis-master redis]# cd /lib/systemd/system</span><br><span class="line">[root@redis-master system]# vim redis.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=Redis</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/data/application/redis/src/redis-server /data/application/redis/redis.conf  --daemonize no</span><br><span class="line">ExecStop=/data/application/redis/src/redis-cli -h 127.0.0.1 -p 6379 shutdown</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">参数详解:</span><br><span class="line">• [Unit] 表示这是基础信息 </span><br><span class="line">• Description 是描述</span><br><span class="line">• After 是在那个服务后面启动，一般是网络服务启动后启动</span><br><span class="line"></span><br><span class="line">• [Service] 表示这里是服务信息 </span><br><span class="line">• ExecStart 是启动服务的命令</span><br><span class="line">• ExecStop 是停止服务的指令</span><br><span class="line"></span><br><span class="line">• [Install] 表示这是是安装相关信息 </span><br><span class="line">• WantedBy 是以哪种方式启动：multi-user.target表明当系统以多用户方式（默认的运行级别）启动时，这个服务需要被自动运行。</span><br><span class="line">启动服务:</span><br><span class="line">[root@redis-master system]# systemctl daemon-reload</span><br><span class="line">[root@redis-master system]# systemctl start redis.service</span><br></pre></td></tr></table></figure><p>查看端口<br><img src="https://img-blog.csdnimg.cn/20191215220212635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05ld1JhaW5fd2FuZw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 部署mariadb</span></span><br><span class="line">[root@redis-master ~]# yum install -y mariadb mariadb-server mariadb-devel</span><br><span class="line">[root@redis-master ~]# systemctl start mariadb</span><br><span class="line">[root@redis-master ~]# mysqladmin -uroot password 123456</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 配置测试数据</span></span></span><br><span class="line">https://blog.csdn.net/NewRain_wang/article/details/103541196</span><br><span class="line"><span class="meta">#</span><span class="bash"> 部署apache</span></span><br><span class="line">[root@redis-master ~]# yum install -y httpd</span><br><span class="line">[root@redis-master ~]# vim /etc/httpd/conf/httpd.conf</span><br><span class="line">DirectoryIndex index.html index.php</span><br><span class="line"><span class="meta">#</span><span class="bash"> 部署php</span></span><br><span class="line">[root@redis-master ~]# rpm -Uvh https://mirror.webtatic.com/yum/el7/epel-release.rpm</span><br><span class="line">[root@redis-master ~]# rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><br><span class="line">[root@redis-master ~]# yum install php70w.x86_64 php70w-cli.x86_64 php70w-common.x86_64 php70w-gd.x86_64 php70w-ldap.x86_64 php70w-mbstring.x86_64 php70w-mcrypt.x86_64 php70w-mysql.x86_64 php70w-pdo.x86_64 php70w-devel zlib-devel php70w-fpm php70w-pecl-redis  -y</span><br><span class="line">[root@redis-master ~]# vim /etc/php.ini</span><br><span class="line">878 date.timezone =Asia/Shanghai</span><br><span class="line">[root@redis-master ~]# systemctl start php-fpm</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@redis-master ~]# vim /var/www/html/index.php</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="meta">$</span><span class="bash">redishost = <span class="string">&#x27;127.0.0.1&#x27;</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">redisport = 6379;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">redis = new Redis;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">redis-&gt;connect(<span class="variable">$redishost</span>,<span class="variable">$redisport</span>) or die (<span class="string">&quot;Could not connect&quot;</span>);</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="variable">$query</span>=<span class="string">&quot;select emp_no,salary from salaries where emp_no = 10001&quot;</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">query=<span class="string">&quot;select id,name from tt1&quot;</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">key=md5(<span class="variable">$query</span>);</span></span><br><span class="line">if(!$redis-&gt;get($key))</span><br><span class="line">&#123;</span><br><span class="line">                $conn=mysqli_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;123456&quot;,&quot;t1&quot;);</span><br><span class="line">                $result=mysqli_query($conn,$query);</span><br><span class="line">                while ($row=mysqli_fetch_assoc($result))</span><br><span class="line">                &#123;</span><br><span class="line">                        $arr[]=$row;</span><br><span class="line">                &#125;</span><br><span class="line">                $f = &#x27;mysql&#x27;;</span><br><span class="line">                $redis-&gt;set($key,serialize($arr));</span><br><span class="line">                $data = $arr ;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">        $f = &#x27;redis&#x27;;</span><br><span class="line">        $data_mem=$redis-&gt;get($key);</span><br><span class="line">        $data = unserialize($data_mem);</span><br><span class="line">&#125;</span><br><span class="line">echo $f;</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">echo &quot;$key&quot;;</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line"><span class="meta">//print_r($</span><span class="bash">data);</span></span><br><span class="line"><span class="meta">foreach($</span><span class="bash">data as <span class="variable">$a</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">                echo &quot;key is  &lt;b&gt;&lt;font color=#FF0000&gt;$a[id]&lt;/font&gt;&lt;/b&gt;&quot;;</span><br><span class="line">                echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">                echo &quot;value is &lt;b&gt;&lt;font color=#FF0000&gt;$a[name]&lt;/font&gt;&lt;/b&gt;&quot;;</span><br><span class="line">                echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="浏览器访问"><a href="#浏览器访问" class="headerlink" title="浏览器访问"></a>浏览器访问</h5><p><img src="https://img-blog.csdnimg.cn/20191216012256757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L05ld1JhaW5fd2FuZw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>ps  redis mysql 数据库一致性问题<br><a href="https://yq.aliyun.com/articles/712285">https://yq.aliyun.com/articles/712285</a></p>]]></content>
      
      
      <categories>
          
          <category> 存储 </category>
          
          <category> operations </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 存储 </tag>
            
            <tag> 缓存 </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vsftpd 文件传输服务</title>
      <link href="2020/12/04/VSFTP%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E6%9C%8D%E5%8A%A1/"/>
      <url>2020/12/04/VSFTP%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="vsftpd"><a href="#vsftpd" class="headerlink" title="vsftpd"></a>vsftpd</h1><p>环境：</p><ul><li>服务端：centos7 1台</li><li>客户端：windows、linux均可</li><li>关闭selinux、firewalld<h3 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">全称：very security ftp</span><br><span class="line">FTP（File Transfer Protocol，文件传输协议）：用来在不同类型的计算机之间传输文件的协议。属于TCP&#x2F;IP协议簇，工作在OSI模型的第七层及TCP&#x2F;IP模型的第四层，是一种面向连接的协议。</span><br><span class="line">FTP服务器：在网络中提供存储文件空间的计算机，应用FTP协议提供服务。用户可以连接到服务器上下载文件，也可以将文件上传到FTP服务器中。</span><br><span class="line">FTP在对外提供服务时需要维护两个连接：一个是控制连接，负责监听21端口，用来传输控制命令；另一个是数据连接，在主动传输方式下监听20端口，用来传输数据。</span><br><span class="line">FTP协议有两种工作模式，</span><br><span class="line">      主动模式（也就是PORT模式）：主动模式FTP的客户端发送PORT命令到FTP服务器；</span><br><span class="line">      被动模式（也就是PSAV）：被动模式FTP的客户端发送PSAV命令到FTP服务器。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">协议：ftp 文件传输协议</span><br><span class="line">端口：</span><br><span class="line">  建立tcp连接： 21</span><br><span class="line">  传输数据：20</span><br><span class="line">  1024+的随即端口</span><br><span class="line">客户端软件：</span><br><span class="line">  浏览器</span><br><span class="line">  资源管理器</span><br><span class="line">  ftp</span><br><span class="line">  lftp(推荐)</span><br><span class="line"> 安装软件</span><br><span class="line">客户端</span><br><span class="line">  lftp-4.0.9-1.el6.x86_64</span><br><span class="line">  ftp-0.17-53.el6.x86_64</span><br><span class="line">服务端</span><br><span class="line">  vsftpd-2.2.2-11.el6.x86_64</span><br></pre></td></tr></table></figure><h3 id="二、服务端配置"><a href="#二、服务端配置" class="headerlink" title="二、服务端配置"></a>二、服务端配置</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@ftpserver ~]# systemctl stop firewalld &amp;&amp; setenforce 0</span><br><span class="line">[root@ftpserver ~]# yum install -y vsftpd  # 下载vsftpd的包</span><br><span class="line">[root@ftpserver ~]# vim &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf # 修改配置文件,修改一下配置</span><br><span class="line">anonymous_enable&#x3D;NO         # 不允许匿名登录</span><br><span class="line">anon_upload_enable&#x3D;YES      # 允许上传文件</span><br><span class="line">anon_mkdir_write_enable&#x3D;YES # 允许上传目录</span><br><span class="line">注：修改后服务需要重启，客户端退出重新登录，ftp根目录不能高于755权限，pub和自创目录需要777权限才能上传成功。</span><br><span class="line">[root@ftpserver ~]# passwd ftp  # 修改ftp账号密码</span><br><span class="line">[root@ftpserver ~]# systemctl start vsftpd  # 启动ftp服务器</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ul><h3 id="三、客户端配置"><a href="#三、客户端配置" class="headerlink" title="三、客户端配置"></a>三、客户端配置</h3><p>1、windows客户端<br>使用资源管理器或者浏览器<br><a href="https://imgchr.com/i/DLcF61"><img src="https://s3.ax1x.com/2020/12/05/DLcF61.png" alt="DLcF61.png"></a></p><p><a href="https://imgchr.com/i/DLcmkD"><img src="https://s3.ax1x.com/2020/12/05/DLcmkD.png" alt="DLcmkD.png"></a></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# lftp 192.168.101.244 -u ftp</span><br><span class="line">口令: </span><br><span class="line">lftp ftp@192.168.101.244:~&gt; ls            </span><br><span class="line">drwxr-xr-x    2 0        0               6 Jul 03 12:17 777</span><br><span class="line">drwxr-xr-x    2 0        0               6 Oct 30  2018 pub</span><br><span class="line">drwxrwxrwx    2 0        0              67 Jul 03 12:19 testput</span><br><span class="line">lftp ftp@192.168.101.244:~&gt; </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    #lftp  172.16.70.251  </span><br><span class="line">    #lftp  172.16.70.251 -u wing  -p  端口</span><br><span class="line">    &gt; help</span><br><span class="line">    &gt; help ls</span><br><span class="line">    &gt; ls       &#x2F;&#x2F;查看文件</span><br><span class="line">    &gt; dir      &#x2F;&#x2F;同上</span><br><span class="line">    &gt; cd  pub</span><br><span class="line">    &gt; lcd  &#x2F;root&#x2F;Desktop    &#x2F;&#x2F;切换本地目录</span><br><span class="line">    &gt; get  文件1 文件2 文件3    -o   &#x2F;root&#x2F;Desktop        &#x2F;&#x2F;下载文件,多个文件用空格隔开，-o指定下载目录</span><br><span class="line">    &gt; mirror  目录  指定的下载目录           &#x2F;&#x2F;下载目录</span><br><span class="line">    &gt; put      文件                &#x2F;&#x2F;上传文件</span><br><span class="line">    &gt; mirror  -R  目录       &#x2F;&#x2F;上传目录</span><br><span class="line">    &gt; mkdir  目录</span><br><span class="line">    &gt; rmdir  目录</span><br><span class="line">    &gt; mget -c  aaa.txt </span><br><span class="line">vsftpd扩展功能</span><br><span class="line">常用全局配置</span><br><span class="line">    listen_address&#x3D;192.168.4.1   &#x2F;&#x2F;设置监听的IP 地址</span><br><span class="line">    listen_port&#x3D;21                       &#x2F;&#x2F;设置监听FTP 服务的端口号</span><br><span class="line">    write_enable&#x3D;YES                  &#x2F;&#x2F;是否启用写入权限</span><br><span class="line">    download_enable&#x3D;YES           &#x2F;&#x2F;是否允许下载文件</span><br><span class="line">    </span><br><span class="line">    userlist_enable&#x3D;YES              &#x2F;&#x2F;是否启用user_list 列表文件</span><br><span class="line">    download_enable&#x3D;NO &#x2F;&#x2F;禁止用户下载</span><br><span class="line">    anon_other_write_enable&#x3D;YES &#x2F;&#x2F;匿名用户可以删除和重命名                                                 &#x2F;&#x2F;文件在&#x2F;etc&#x2F;vsftpd目录下</span><br><span class="line">    userlist_deny&#x3D;YES                 &#x2F;&#x2F;是否禁用user_list 中的用户</span><br><span class="line"></span><br><span class="line">    max_clients&#x3D;0                       &#x2F;&#x2F;限制并发客户端连接数</span><br><span class="line">    max_per_ip&#x3D;0                        &#x2F;&#x2F;限制同一IP 地址的并发连接数</span><br><span class="line">    </span><br><span class="line">常用的匿名FTP 配置项</span><br><span class="line">    anonymous_enable&#x3D;YES      &#x2F;&#x2F;启用匿名访问</span><br><span class="line">    anon_umask&#x3D;022                &#x2F;&#x2F;匿名用户所上传文件的权限掩码</span><br><span class="line">    anon_root&#x3D;&#x2F;var&#x2F;ftp               &#x2F;&#x2F;匿名用户根目录</span><br><span class="line">    anon_upload_enable&#x3D;YES    &#x2F;&#x2F;允许上传文件</span><br><span class="line">    anon_mkdir_write_enable&#x3D;YES     &#x2F;&#x2F;允许创建目录</span><br><span class="line">    anon_other_write_enable&#x3D;YES      &#x2F;&#x2F;开放其他写入权</span><br><span class="line">    anon_max_rate&#x3D;0                        &#x2F;&#x2F;限制最大传输速率,单位为字节</span><br><span class="line"></span><br><span class="line">常用的本地用户FTP 配置项</span><br><span class="line">    local_enable&#x3D;YES                         &#x2F;&#x2F;是否启用本地系统用户</span><br><span class="line">    local_umask&#x3D;022                         &#x2F;&#x2F;本地用户所上传文件的权限掩码</span><br><span class="line">    local_root&#x3D;&#x2F;var&#x2F;ftp                        &#x2F;&#x2F;本地账户ftp根目录</span><br><span class="line">    local_max_rate&#x3D;0                          &#x2F;&#x2F;限制最大传输速率(字节&#x2F;秒)</span><br><span class="line"></span><br><span class="line">    chroot_local_user&#x3D;YES                 &#x2F;&#x2F;限制所有本地用户在家目录里</span><br><span class="line">    </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 存储 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql-galera集群部署</title>
      <link href="2020/12/04/mysql%E4%B9%8Bgalera%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/"/>
      <url>2020/12/04/mysql%E4%B9%8Bgalera%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="Galera-Cluster-介绍"><a href="#Galera-Cluster-介绍" class="headerlink" title="Galera Cluster 介绍"></a>Galera Cluster 介绍</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Galera是一个MySQL(也支持MariaDB，Percona)的同步多主集群软件。</span><br><span class="line"></span><br><span class="line">主要功能</span><br><span class="line">同步复制</span><br><span class="line">Active-active的多主拓扑结构</span><br><span class="line">真正的multi-master，即所有节点可以同时读写数据库</span><br><span class="line">自动成员资格控制，失败节点从群集中删除</span><br><span class="line">新节点加入数据自动复制</span><br><span class="line">真正的并行复制，行级</span><br></pre></td></tr></table></figure><h3 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">centos 7.5 4台</span><br><span class="line">mysql-wsrep 5.7</span><br></pre></td></tr></table></figure><h3 id="集群部署"><a href="#集群部署" class="headerlink" title="集群部署"></a>集群部署</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">准备环境：</span><br><span class="line">主机解析：</span><br><span class="line">[root@admin ~]# cat /etc/hosts</span><br><span class="line">127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1 localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">192.168.245.133 galera1</span><br><span class="line">192.168.245.136 galera2</span><br><span class="line">192.168.245.10 galera3</span><br><span class="line">192.168.245.135 galera4</span><br><span class="line"></span><br><span class="line">关闭防火墙和selinux:</span><br><span class="line">setenforce 0 &amp;&amp; systemctl stop firewalld</span><br><span class="line"></span><br><span class="line">时间同步：</span><br><span class="line">修改时区：</span><br><span class="line"><span class="meta">#</span><span class="bash"> ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> timedatectl set-timezone Asia/Shanghai</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">下载和安装Galera（每台都需要安装）</span><br><span class="line">注意：Galera有独立的补丁包，也有在mysql基础上打好补丁的完整包</span><br><span class="line">我们要下载带wsrep扩展补丁的版本，比如：</span><br><span class="line">MySQL 5.7.20 extended with wsrep patch version 25.13</span><br><span class="line"></span><br><span class="line">所以：删除原版本mysql，步骤不够详细，详细的之前有讲过:</span><br><span class="line">[root@wing yum.repos.d]# yum erase `rpm -qa | grep mysql` -y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">根据官方下载提示找到下载路径，发现下载路径下是已经做好yum源的路径，所以可以直接修改yum配置文件使用yum安装</span><br><span class="line"></span><br><span class="line">配置yum源：</span><br><span class="line">[root@wing yum.repos.d]# cat galera.repo</span><br><span class="line">[galera]</span><br><span class="line">name=galera</span><br><span class="line">baseurl=http://releases.galeracluster.com/mysql-wsrep-5.7/centos/7/x86_64/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">[root@wing yum.repos.d]# yum list | grep &#x27;galera&#x27;</span><br><span class="line">galera.x86_64 25.3.12-2.el7 epel</span><br><span class="line">mysql-wsrep-5.7.x86_64 5.7.20-25.13.el7 galera</span><br><span class="line">mysql-wsrep-client-5.7.x86_64 5.7.20-25.13.el7 galera</span><br><span class="line">mysql-wsrep-common-5.7.x86_64 5.7.20-25.13.el7 galera</span><br><span class="line">mysql-wsrep-devel-5.7.x86_64 5.7.20-25.13.el7 galera</span><br><span class="line">mysql-wsrep-libs-5.7.x86_64 5.7.20-25.13.el7 galera</span><br><span class="line">mysql-wsrep-libs-compat-5.7.x86_64 5.7.20-25.13.el7 galera</span><br><span class="line">mysql-wsrep-server-5.7.x86_64 5.7.20-25.13.el7 galera</span><br><span class="line">注意：需要epel源提供galera包</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果是yum源安装：</span></span><br><span class="line">[root@wing yum.repos.d]# yum install mysql-wsrep-5.7.x86_64 galera rsync -y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果是本地安装，注意安装顺序</span></span><br><span class="line">yum install -y \</span><br><span class="line">mysql-wsrep-libs-compat-5.7-5.7.29-25.21.el7.x86_64.rpm \</span><br><span class="line">mysql-wsrep-common-5.7-5.7.29-25.21.el7.x86_64.rpm \</span><br><span class="line">mysql-wsrep-libs-5.7-5.7.29-25.21.el7.x86_64.rpm \</span><br><span class="line">mysql-wsrep-client-5.7-5.7.29-25.21.el7.x86_64.rpm \</span><br><span class="line">mysql-wsrep-server-5.7-5.7.29-25.21.el7.x86_64.rpm \</span><br><span class="line">mysql-wsrep-devel-5.7-5.7.29-25.21.el7.x86_64.rpm \</span><br><span class="line">galera-25.3.12-2.el7.x86_64.rpm \</span><br><span class="line">boost-program-options-1.53.0-27.el7.x86_64.rpm \</span><br><span class="line">nmap-ncat-6.40-19.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">特别注意：</span><br><span class="line">1.timezone,ceph和rsync</span><br><span class="line">2./var/lib/mysql下3个文件：grastate.dat gvwstate.dat galera.cache 如果出了错，把他们统统干掉</span><br><span class="line">3.如果一起添到集群中不行就一个节点一个节点的添加</span><br><span class="line"></span><br><span class="line">修改密码：</span><br><span class="line">[root@galera1 ~]# mysql_pass=`grep &#x27;password is generated&#x27; /var/log/mysqld.log |awk &#x27;&#123;print $NF&#125;&#x27; |awk &#x27;END&#123;print&#125;&#x27;` &amp;&amp; echo $mysql_pass</span><br><span class="line">[root@galera1 ~]# mysqladmin -u root -p$&#123;mysql_pass&#125; password &#x27;Qianfeng123!&#x27;</span><br><span class="line">[root@galera1 ~]# mysql -u root -p&#x27;Qianfeng123!&#x27;</span><br><span class="line"></span><br><span class="line">每台机器创建用于数据同步的用户:</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> grant all on *.* to <span class="string">&#x27;syncuser&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;QianFeng@123&#x27;</span>;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> flush privileges;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">配置Galera Replication:</span><br><span class="line">galera1配置：主配置文件my.cnf追加如下内容</span><br><span class="line">server-id=1</span><br><span class="line">binlog_format=row</span><br><span class="line">innodb_file_per_table=1</span><br><span class="line">innodb_autoinc_lock_mode=2</span><br><span class="line"></span><br><span class="line">wsrep_on=ON</span><br><span class="line">wsrep_provider=/usr/lib64/galera/libgalera_smm.so</span><br><span class="line">wsrep_cluster_name=&#x27;galera&#x27;</span><br><span class="line">wsrep_cluster_address=&#x27;gcomm://&#x27;</span><br><span class="line">wsrep_node_name=&#x27;galera1&#x27;</span><br><span class="line">wsrep_node_address=&#x27;192.168.245.133&#x27;</span><br><span class="line">wsrep_sst_auth=syncuser:&#x27;QianFeng@123&#x27;</span><br><span class="line">wsrep_sst_method=rsync</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">galera2配置：主配置文件my.cnf追加如下内容</span><br><span class="line">server-id=2</span><br><span class="line">binlog_format=row</span><br><span class="line">innodb_file_per_table=1</span><br><span class="line">innodb_autoinc_lock_mode=2</span><br><span class="line"></span><br><span class="line">wsrep_on=ON</span><br><span class="line">wsrep_provider=/usr/lib64/galera/libgalera_smm.so</span><br><span class="line">wsrep_cluster_name=&#x27;galera&#x27;</span><br><span class="line">wsrep_cluster_address=&#x27;gcomm://galera1,galera3,galera4&#x27;</span><br><span class="line">wsrep_node_name=&#x27;galera2&#x27;</span><br><span class="line">wsrep_node_address=&#x27;192.168.245.136&#x27;</span><br><span class="line">wsrep_sst_auth=syncuser:&#x27;QianFeng@123&#x27;</span><br><span class="line">wsrep_sst_method=rsync</span><br><span class="line"></span><br><span class="line">galera3配置：主配置文件my.cnf追加如下内容</span><br><span class="line">server-id=3</span><br><span class="line">binlog_format=row</span><br><span class="line">innodb_file_per_table=1</span><br><span class="line">innodb_autoinc_lock_mode=2</span><br><span class="line"></span><br><span class="line">wsrep_on=ON</span><br><span class="line">wsrep_provider=/usr/lib64/galera/libgalera_smm.so</span><br><span class="line">wsrep_cluster_name=&#x27;galera&#x27;</span><br><span class="line">wsrep_cluster_address=&#x27;gcomm://galera1,galera2,galera4&#x27;</span><br><span class="line">wsrep_node_name=&#x27;galera3&#x27;</span><br><span class="line">wsrep_node_address=&#x27;192.168.245.10&#x27;</span><br><span class="line">wsrep_sst_auth=syncuser:&#x27;QianFeng@123&#x27;</span><br><span class="line">wsrep_sst_method=rsync</span><br><span class="line"></span><br><span class="line">galera4配置：主配置文件my.cnf追加如下内容</span><br><span class="line">server-id=4</span><br><span class="line">binlog_format=row</span><br><span class="line">innodb_file_per_table=1</span><br><span class="line">innodb_autoinc_lock_mode=2</span><br><span class="line"></span><br><span class="line">wsrep_on=ON</span><br><span class="line">wsrep_provider=/usr/lib64/galera/libgalera_smm.so</span><br><span class="line">wsrep_cluster_name=&#x27;galera&#x27;</span><br><span class="line">wsrep_cluster_address=&#x27;gcomm://galera1,galera2,galera3&#x27;</span><br><span class="line">wsrep_node_name=&#x27;galera4&#x27;</span><br><span class="line">wsrep_node_address=&#x27;192.168.245.135&#x27;</span><br><span class="line">wsrep_sst_auth=syncuser:&#x27;QianFeng@123&#x27;</span><br><span class="line">wsrep_sst_method=rsync</span><br><span class="line"></span><br><span class="line">重启服务：每台机器</span><br><span class="line">[root@galera1 ~]# systemctl restart mysqld</span><br><span class="line"></span><br><span class="line">查看端口：galera端口4567 mysql端口3306</span><br><span class="line">[root@galera1 ~]# ss -auntpl | grep -E &#x27;3306|4567&#x27;</span><br><span class="line">tcp LISTEN 0 128 *:4567 *:* users:((&quot;mysqld&quot;,pid=11068,fd=12))</span><br><span class="line">tcp LISTEN 0 80 :::3306 :::* users:((&quot;mysqld&quot;,pid=11068,fd=39))</span><br><span class="line"></span><br><span class="line">测试：</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show status like <span class="string">&#x27;wsrep%&#x27;</span>;</span></span><br><span class="line">wsrep_incoming_addresses | 192.168.245.136:3306,192.168.245.135:3306,192.168.245.10:3306 |</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>阶段测试:<br>在任何一台机器上写数据，在其他机器上全部会同步</p>]]></content>
      
      
      <categories>
          
          <category> 存储 </category>
          
          <category> operations </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 数据库 </tag>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 系统日志服务</title>
      <link href="2020/12/04/rsyslog_%E7%AE%A1%E7%90%86%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>2020/12/04/rsyslog_%E7%AE%A1%E7%90%86%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h4 id="一：日志的重要性"><a href="#一：日志的重要性" class="headerlink" title="一：日志的重要性"></a>一：日志的重要性</h4><p>日志分类：系统日志，进程日志，应用程序日志 </p><p>记录日志的用处： 排错，追溯事件，统计流量，审计安全行为 </p><p>rsyslogd：只负责绝大部分日志记录，和系统操作有关，安全，认证，计划任务… </p><p>处理分析日志：</p><p>1.少量日志使用vim cat tail grep awk这些文档处理程序查看和检索                        </p><p>2.大量日志可以用splunk、elk  </p><p>日志存放位置:  存放本地 /var/log    </p><p>日志服务启动:systemctl start rsyslog </p><p>日志配置文件:/etc/rsyslog.conf </p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@newrain ~]# ps aux |grep rsyslogd |grep -v grep root       </span><br><span class="line"></span><br><span class="line">686  0.0  0.0 219752  8436 ?        Ssl  16:35   0:00 /usr/sbin/rsyslogd -n </span><br></pre></td></tr></table></figure><h4 id="二：rsyslog日志管理"><a href="#二：rsyslog日志管理" class="headerlink" title="二：rsyslog日志管理"></a>二：rsyslog日志管理</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">常见的日志文件(系统、进程、应用程序)</span><br><span class="line"><span class="meta">#</span><span class="bash"> ls /var/<span class="built_in">log</span>/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> tail /var/<span class="built_in">log</span>/messages      //系统主日志文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> tail -f /var/<span class="built_in">log</span>/messages      //动态查看日志文件的尾部</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> tail -f /var/<span class="built_in">log</span>/secure            //认证、安全</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> tail /var/<span class="built_in">log</span>/cron            //crond、at进程产生的日志</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> tail /var/<span class="built_in">log</span>/yum.log                   //yum</span></span><br><span class="line"></span><br><span class="line">二进制日志：</span><br><span class="line"><span class="meta">#</span><span class="bash"> w                             //当前登录的用户即: /var/<span class="built_in">log</span>/wtmp日志</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> last                            //最近登录的用户 /var/<span class="built_in">log</span>/btmp</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> lastlog                        //所有用户的登录情况 /var/<span class="built_in">log</span>/lastlog</span></span><br><span class="line"></span><br><span class="line">进程以自己的方式去记录日志</span><br><span class="line"><span class="meta">#</span><span class="bash"> tail /var/<span class="built_in">log</span>/mysqld.log               //MySQL进程自己记录的日志</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> tail /var/<span class="built_in">log</span>/httpd/access_log         //Apache自己记录的日志</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> tail /var/<span class="built_in">log</span>/xferlog                  //和访问FTP服务器相关</span></span><br><span class="line"></span><br><span class="line">案例1: 统计登录失败top 2 </span><br><span class="line"><span class="meta">#</span><span class="bash"> grep <span class="string">&#x27;Fail&#x27;</span> /var/<span class="built_in">log</span>/secure |awk <span class="string">&#x27;&#123;print $11&#125;&#x27;</span> |sort |uniq -c|sort -n -r |head -2</span></span><br><span class="line">    366 140.205.225.186</span><br><span class="line">    335 140.205.201.44</span><br><span class="line"></span><br><span class="line">案例2: 统计登录成功 </span><br><span class="line"><span class="meta">#</span><span class="bash"> grep <span class="string">&#x27;Accepted&#x27;</span> /var/<span class="built_in">log</span>/secure*</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="三-mysql存放rsyslog日志"><a href="#三-mysql存放rsyslog日志" class="headerlink" title="三: mysql存放rsyslog日志"></a>三: mysql存放rsyslog日志</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">yum install -y mariadb mariadb-server</span><br><span class="line">yum install -y rsyslog-mysql  # 安装驱动</span><br><span class="line">rpm -ql rsyslog-mysql # 找到sql文件</span><br><span class="line"></span><br><span class="line"># 将sql文件导入到数据库中</span><br><span class="line">mysql&gt; GRANT ALL ON Syslog.* TO &#39;rsyslog&#39;@&#39;127.0.0.1&#39; IDENTIFIED BY &#39;rsyspass&#39;;</span><br><span class="line">mysql&gt; GRANT ALL ON Syslog.* TO &#39;rsyslog&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;rsyspass&#39;;</span><br><span class="line">mysql&gt; FLUSH PRICVILEGES</span><br><span class="line"></span><br><span class="line"># 配置rsyslog加载ommysql模块</span><br><span class="line">#### MODULES ####</span><br><span class="line">$ModLoad ommysql</span><br><span class="line"></span><br><span class="line"># 配置RULES，将所期望的日志信息记录于mysql中</span><br><span class="line"># 格式为 </span><br><span class="line">facility.priority :ommysql:DBHOST,DB,DBUSER,DBUSERPASS</span><br><span class="line">*.*:ommysql:127.0.0.1,Syslog,rsyslog,rsyspass</span><br><span class="line"></span><br><span class="line">systemctl restart mariadb</span><br><span class="line">systemctl restart rsyslog</span><br></pre></td></tr></table></figure><h4 id="四：集中式日志管理"><a href="#四：集中式日志管理" class="headerlink" title="四：集中式日志管理"></a>四：集中式日志管理</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">自定义日志</span><br><span class="line">自己定义日志的名字和位置</span><br><span class="line">查看日志文件是否起来：systemctl status rsyslog</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">vim /etc/rsyslog.conf -----&gt; 日志的主配置文件  include 包含</span></span><br><span class="line">*.info;mail.none;authpriv.none;cron.none      /var/log/messages 日志定义</span><br><span class="line">      .之前叫做日志对象，要给谁记录日志</span><br><span class="line">      .之后日志级别:级别越低，信息越多 </span><br><span class="line">  日志文件:存储日志的文件</span><br><span class="line">日志级别</span><br><span class="line">        lpr： 打印相关的日志</span><br><span class="line">        auth：认证相关的日志</span><br><span class="line">        user：用户相关的日志</span><br><span class="line">        cron：计划任务相关的日志</span><br><span class="line">        kern：内核相关的日志</span><br><span class="line">        mail：邮件相关的日志</span><br><span class="line">        mark：标记相关的日志</span><br><span class="line">        news：新闻相关的日志</span><br><span class="line">        uucp：文件copy相关的日志</span><br><span class="line">        daemon：系统服务相关的日志</span><br><span class="line">        authpri: 授权相关的日志</span><br><span class="line">        security:安全相关的日志前的级别低，越详细，低的包含高的日志级别</span><br><span class="line">debug：最低的，一般不用</span><br><span class="line">info：安装信息，警告信息，错误信息   </span><br><span class="line">notice：相当与提示</span><br><span class="line">warn/warning：警告，错误                             </span><br><span class="line">error/err：错误，严重错误 </span><br><span class="line">alert：告警，表示已经出现问题</span><br><span class="line">emerg：恐慌级别</span><br><span class="line"></span><br><span class="line">eg：将内核日志文件自定义到/var/log/kern.log</span><br><span class="line">touch /var/log/kern.log</span><br><span class="line">vim /etc/rsyslog.conf ----&gt;kern.info /var/log/kern.log    </span><br><span class="line">查看都有哪些日志对象和日志级别</span><br><span class="line"><span class="meta">#</span><span class="bash">man 5 rsyslog.conf</span></span><br><span class="line">local0 through local7：自己定义的日志文件</span><br><span class="line">======================================</span><br><span class="line"></span><br><span class="line">例：</span><br><span class="line">*.* /var/log/mylog</span><br><span class="line">kern.err /var/log/kernel.log</span><br><span class="line">*.info;mail.none    /var/log/big.log</span><br><span class="line">mail.info/var/log/mail.log</span><br><span class="line">    cron.info;cron.!err /var/log/newcron</span><br><span class="line"></span><br><span class="line">======================================</span><br><span class="line"></span><br><span class="line">local0-local7日志设备的使用:   ssh的配置文件：/etc/ssh/sshd_config</span><br><span class="line">例：定义sshd日志：</span><br><span class="line">    1.修改sshd服务主配置文件：</span><br><span class="line">    将/etc/ssh/sshd_config 的#SyslogFacility AUTHPRIV改为 SyslogFacility local2</span><br><span class="line">    SyslogFacility local5   //设置ssh的日志定义由local5设备来记录</span><br><span class="line">    2.在rsyslog的主配置文件里加上</span><br><span class="line">     local5.info /var/log/ssh</span><br><span class="line">    3.重启服务</span><br></pre></td></tr></table></figure><h4 id="五：日志切割"><a href="#五：日志切割" class="headerlink" title="五：日志切割"></a>五：日志切割</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">logrotate日志轮转(切割)</span><br><span class="line">========================================================</span><br><span class="line">注：针对任何日志文件</span><br><span class="line"></span><br><span class="line">logrotate (轮转，日志切割)</span><br><span class="line">1. 如果没有日志轮转，日志文件会越来越大，最后导致日志打不开或者是打开时间过长</span><br><span class="line">2. 将丢弃系统中最旧的日志文件，以节省空间</span><br><span class="line">3. logrotate本身不是系统进程，即日志的轮转不会自动执行，它是通过写到相应的配置文件中使用计划任务crond每天执行 </span><br><span class="line">4.对日志的切割，你只需要给他定义一个规则</span><br><span class="line"></span><br><span class="line">[root@newrain ~]# rpm -qa |grep logrotate</span><br><span class="line">logrotate-3.7.8-16.el6.x86_64</span><br><span class="line"></span><br><span class="line">logrotate 配置文件：</span><br><span class="line">/etc/logrotate.conf (决定每个日志文件如何轮转)</span><br><span class="line">/etc/logrotate.d/*</span><br><span class="line"></span><br><span class="line">主配置文件</span><br><span class="line">[root@newrain ~]# vim /etc/logrotate.conf</span><br><span class="line">=========全局设置==========</span><br><span class="line">weekly                      //轮转的周期，一周轮转</span><br><span class="line">rotate 4           //保留4份</span><br><span class="line">create                 //轮转后创建新文件</span><br><span class="line">dateext                           //使用日期作为后缀</span><br><span class="line"><span class="meta">#</span><span class="bash">compress                //是否压缩</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> RPM packages drop <span class="built_in">log</span> rotation information into this directory</span>  </span><br><span class="line"><span class="meta">#</span><span class="bash"> rpm安装的程序，按照下面目录规则进行轮转</span></span><br><span class="line">include /etc/logrotate.d  //包含该目录下的文件</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> no packages own wtmp and btmp -- we<span class="string">&#x27;ll rotate them here</span></span>  </span><br><span class="line"><span class="meta">#</span><span class="bash"> 对于wtmp和btmp这样无主的日志，按照下面配置进行轮转</span></span><br><span class="line">/var/log/wtmp &#123;      //对该日志文件设置轮转的方法</span><br><span class="line">    monthly                //一月轮转一次</span><br><span class="line">    minsize 1M            //最小达到1M才轮转，即到了规定的时间未达到大小不会轮转</span><br><span class="line">    create 0664 root utmp//轮转后创建新文件，并设置权限属主和属组</span><br><span class="line">    rotate 1                  //保留一份</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/var/log/btmp &#123;</span><br><span class="line">    missingok            //丢失不提示</span><br><span class="line">    monthly                //每月轮转一次</span><br><span class="line">    create 0600 root utmp//轮转后创建新文件，并设置权限</span><br><span class="line">    rotate 1                  //保留一份</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@newrain ~]# vim /etc/logrotate.d/yum  //原有的设置，没有说保存几份，看上面的全局设置</span><br><span class="line">/var/log/yum.log &#123;        //yum日志文件</span><br><span class="line">    missingok            //丢失不提示</span><br><span class="line">    notifempty            //如果为空，不轮转</span><br><span class="line">    size 30k                //达到30k就轮转</span><br><span class="line">    yearly            //达到一年就轮转一次，两者满足一个就轮转</span><br><span class="line">    create 0600 root root  //创建新文件</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@newrain ~]# ls /etc/logrotate.d/</span><br><span class="line">chrony  ppp    wpa_supplicant   syslog  yum</span><br><span class="line"></span><br><span class="line">日志的轮转规则文件是在安装rpm包时就自动提供的，无需人为手动编写</span><br><span class="line">只有自己创建的日志文件才需要自己编写日志轮转规则文件</span><br><span class="line">[root@newrain ~]# yum -y install httpd</span><br><span class="line">[root@newrain ~]# ls /etc/logrotate.d/</span><br><span class="line">chrony  ppp    wpa_supplicant   syslog  yum httpd</span><br><span class="line"></span><br><span class="line">[root@newrain logrotate.d]# yum -y install vsftpd</span><br><span class="line">[root@newrain logrotate.d]# ls</span><br><span class="line">chrony  httpd  ppp  syslog  vsftpd  wpa_supplicant  yum</span><br><span class="line"></span><br><span class="line">说明：</span><br><span class="line">当切割之后创建新文件，新文件有新的inode number </span><br><span class="line">如果希望进程如rsyslog、nginx进程会把新的日志写入新日志文件中，应该在日志切割后，告诉一下rsyslog、nginx进程reload 或 信号(1 or HUP)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> operations </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 系统服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高并发架构升级处理</title>
      <link href="2020/12/04/%E9%AB%98%E5%B9%B6%E5%8F%91%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84/"/>
      <url>2020/12/04/%E9%AB%98%E5%B9%B6%E5%8F%91%E9%9B%86%E7%BE%A4%E6%9E%B6%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1 id="第一次架构测试-LVS-DR-NGINX-处理静态"><a href="#第一次架构测试-LVS-DR-NGINX-处理静态" class="headerlink" title="第一次架构测试  LVS-DR + NGINX 处理静态"></a>第一次架构测试  LVS-DR + NGINX 处理静态</h1><h5 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">前言：使用lvs4层负载作为分发器，分发给后端nginx，由nginx 处理静态页面</span><br><span class="line"><span class="meta">#</span><span class="bash"> centos 7.6 3台</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 后端nginx 2台 ip 10.3.131.231  10.3.131.230</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> lvs分发器 1台  ip DIP 10.3.131.76 VIP 10.3.131.235</span> </span><br><span class="line"><span class="meta">#</span><span class="bash"> lvs 版本。1.2.1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> nginx 1.16.0</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 防火墙 selinux 关闭</span></span><br></pre></td></tr></table></figure><h5 id="real-server-nginx-部署"><a href="#real-server-nginx-部署" class="headerlink" title="real server nginx 部署"></a>real server nginx 部署</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 源码安装nginx</span></span><br><span class="line">1、安装编译环境</span><br><span class="line">[root@nginx ~]# yum -y install gcc gcc-c++</span><br><span class="line">2、安装pcre软件包（使nginx支持http rewrite模块）</span><br><span class="line">[root@nginx ~]# yum install -y pcre pcre-devel</span><br><span class="line">3、安装openssl-devel（使nginx支持ssl）</span><br><span class="line">[root@nginx ~]# yum install -y openssl openssl-devel </span><br><span class="line">4、安装zlib</span><br><span class="line">[root@nginx ~]# yum install -y zlib zlib-devel</span><br><span class="line">5、创建用户nginx</span><br><span class="line">[root@nginx ~]# useradd nginx </span><br><span class="line">6、编译安装</span><br><span class="line">[root@nginx ~]# wget http://nginx.org/download/nginx-1.16.0.tar.gz</span><br><span class="line">[root@nginx ~]# tar xzf nginx-1.16.0.tar.gz -C /usr/local/</span><br><span class="line">[root@nginx ~]# cd /usr/local/nginx-1.16.0/</span><br><span class="line">[root@nginx nginx-1.16.0]# ./configure --prefix=/usr/local/nginx --group=nginx --user=nginx --sbin-path=/usr/local/nginx/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --http-client-body-temp-path=/tmp/nginx/client_body --http-proxy-temp-path=/tmp/nginx/proxy --http-fastcgi-temp-path=/tmp/nginx/fastcgi --pid-path=/var/run/nginx.pid --lock-path=/var/lock/nginx --with-http_stub_status_module --with-http_ssl_module --with-http_gzip_static_module --with-pcre --with-http_realip_module --with-stream</span><br><span class="line">[root@nginx nginx-1.16.0]# make &amp;&amp; make install</span><br><span class="line">[root@nginx ~]# mkdir /tmp/nginx</span><br><span class="line">[root@nginx ~]# /usr/local/nginx/sbin/nginx # 启动测试</span><br><span class="line">[root@nginx ~]# echo &#x27;1&#x27; &gt; /usr/local/nginx/html/index.html # 不同页面方便测试</span><br><span class="line">[root@nginx ~]# vim /etc/sysctl.conf</span><br><span class="line">net.ipv4.conf.ens33.arp_ignore = 1</span><br><span class="line">net.ipv4.conf.ens33.arp_announce = 2</span><br><span class="line">[root@nginx ~]# sysctl -p</span><br><span class="line">[root@nginx ~]# ip addr add dev lo 10.3.131.235/32</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="lvs-部署及DR模式配置"><a href="#lvs-部署及DR模式配置" class="headerlink" title="lvs 部署及DR模式配置"></a>lvs 部署及DR模式配置</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 临时设置VIP</span></span><br><span class="line">[root@lvs ~]# ip addr add dev ens33 10.3.131.235/32</span><br><span class="line"><span class="meta">#</span><span class="bash"> 永久设置VIP</span></span><br><span class="line">[root@lvs ~]# cd /etc/sysconfig/network-scripts/</span><br><span class="line">[root@lvs ~]# cp ifcfg-eth0 ifcfg-eth0:1</span><br><span class="line">[root@lvs ~]# cat ifcfg-eth0:1  # 注意设备名称和mac地址与ens33一样</span><br><span class="line">TYPE=&quot;Ethernet&quot;</span><br><span class="line">BOOTPROTO=&quot;static&quot;</span><br><span class="line">DEFROUTE=&quot;yes&quot;</span><br><span class="line">PEERDNS=&quot;yes&quot;</span><br><span class="line">PEERROUTES=&quot;yes&quot;</span><br><span class="line">IPV4_FAILURE_FATAL=&quot;no&quot;</span><br><span class="line">NAME=&quot;eth0:1&quot;</span><br><span class="line">DEVICE=&quot;eth0:1&quot;</span><br><span class="line">ONBOOT=&quot;yes&quot;</span><br><span class="line">IPADDR=&quot;10.3.131.235&quot;</span><br><span class="line">NETMASK=&quot;225.225.225.0&quot;</span><br><span class="line">HWADDR=&quot;00:0c:29:af:df:sa&quot;    </span><br><span class="line">[root@lvs ~]# systemctl start ipvsadm</span><br><span class="line">注意:启动如果报错: /bin/bash: /etc/sysconfig/ipvsadm: 没有那个文件或目录 需要手动生成文件</span><br><span class="line"><span class="meta">#</span><span class="bash"> 定义分发策略</span></span><br><span class="line">-A：添加VIP </span><br><span class="line">-t：用的是tcp协议 </span><br><span class="line">-a：添加的是lo的vip地址 </span><br><span class="line">-r：转发到realserverip </span><br><span class="line">-s：算法 </span><br><span class="line">-L|-l –list #显示内核虚拟服务器表 </span><br><span class="line">--numeric, -n：#以数字形式输出地址和端口号 </span><br><span class="line">-g --gatewaying #指定LVS工作模式为直接路由器模式DR（也是LVS默认的模式） </span><br><span class="line">-S -save #保存虚拟服务器规则到标准输出，输出为-R 选项可读的格式 </span><br><span class="line">rr：轮循 </span><br><span class="line">如果添加ip错了，删除命令如下: </span><br><span class="line"><span class="meta">#</span><span class="bash"> ip addr del 192.168.246.193 dev ens33</span></span><br><span class="line"></span><br><span class="line">[root@lvs ~]# ipvsadm -C #清除内核虚拟服务器表中的所有记录。</span><br><span class="line">[root@lvs ~]# ipvsadm -A -t 10.3.131.235:80 -s rr</span><br><span class="line">[root@lvs ~]# ipvsadm -a -t 10.3.131.235:80 -r 10.3.131.230 -g</span><br><span class="line">[root@lvs ~]# ipvsadm -a -t 10.3.131.235:80 -r 10.3.131.231 -g</span><br><span class="line">[root@lvs ~]# ipvsadm -S &gt; /etc/sysconfig/ipvsadm</span><br><span class="line">[root@lvs ~]# ipvsadm -L -n --stats #显示统计信息 </span><br><span class="line">1. Conns (connections scheduled) 已经转发过的连接数 </span><br><span class="line">2. InPkts (incoming packets) 入包个数 </span><br><span class="line">3. OutPkts (outgoing packets) 出包个数 </span><br><span class="line">4. InBytes (incoming bytes) 入流量（字节） </span><br><span class="line">5. OutBytes (outgoing bytes) 出流量（字节） </span><br><span class="line">[root@lvs ~]# ipvsadm -L -n --rate #看速率 </span><br><span class="line">1. CPS (current connection rate) 每秒连接数 </span><br><span class="line">2. InPPS (current in packet rate) 每秒的入包个数 </span><br><span class="line">3. OutPPS (current out packet rate) 每秒的出包个数 </span><br><span class="line">4. InBPS (current in byte rate) 每秒入流量（字节） </span><br><span class="line">5. OutBPS (current out byte rate) 每秒出流量（字节）</span><br></pre></td></tr></table></figure><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@server ~]# curl http://10.3.131.235</span><br><span class="line">230</span><br><span class="line">[root@server ~]# curl http://10.3.131.235</span><br><span class="line">231</span><br><span class="line">[root@server ~]# curl http://10.3.131.235</span><br><span class="line">230</span><br><span class="line">[root@server ~]# curl http://10.3.131.235</span><br><span class="line">231</span><br><span class="line">[root@server ~]# curl http://10.3.131.235</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="第二次架构测试，java语言处理，tomcat-集群"><a href="#第二次架构测试，java语言处理，tomcat-集群" class="headerlink" title="第二次架构测试，java语言处理，tomcat 集群"></a>第二次架构测试，java语言处理，tomcat 集群</h1><h5 id="环境准备-1"><a href="#环境准备-1" class="headerlink" title="环境准备"></a>环境准备</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">前言：在第一次架构基础上加入对java项目处理，tomcat集群</span><br><span class="line"><span class="meta">#</span><span class="bash"> tomcat 7.0.94</span></span><br><span class="line">ip 10.3.131.236</span><br><span class="line"><span class="meta">#</span><span class="bash"> jdk 7u67</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 项目代码 jspgouv6</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭防火墙 selinux</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mysql 5.7.28 yum安装及编译安装</span> </span><br><span class="line">ip 10.3.131.239</span><br></pre></td></tr></table></figure><h5 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h5><h6 id="tomcat-部署"><a href="#tomcat-部署" class="headerlink" title="tomcat 部署"></a>tomcat 部署</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@tomcat ~]# wget http://mirror.bit.edu.cn/apache/tomcat/tomcat-7/v7.0.94/bin/apache- tomcat-7.0.94.tar.gz</span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载jdk</span></span><br><span class="line">JDK下载地址： https://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads- javase7-521261.html</span><br><span class="line"><span class="meta">#</span><span class="bash"> 项目包已提供</span></span><br><span class="line">[root@tomcat ~]# tar xf apache-tomcat-7.0.94.tar.gz -C /usr/local/    # 解压tomcat 到/usr/local目录下</span><br><span class="line">[root@tomcat ~]# tar xf jdk-7u67-linux-x64.tar.gz -C /usr/local/      # 解压jdk到 /usr/local 目录下</span><br><span class="line">[root@tomcat ~]# cd /usr/local/                                       # 进入 /usr/local 目录</span><br><span class="line">[root@tomcat ~]# mv jdk1.7.0_67/ java   # 修改目录名称</span><br><span class="line">[root@tomcat ~]# mv apache-tomcat-7.0.94/ tomcat</span><br><span class="line">2.修改环境变量</span><br><span class="line">[root@tomcat ~]# vim /etc/profile.d/jdk.sh</span><br><span class="line">JAVA_HOME=/usr/local/java</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export JAVA_HOME PATH</span><br><span class="line">CATALINA_HOME=/usr/local/tomcat</span><br><span class="line">export CATALINA_HOME</span><br><span class="line"></span><br><span class="line">[root@tomcat ~]# source /etc/profile.d/jdk.sh</span><br><span class="line">3.检测</span><br><span class="line">[root@tomcat ~]# java -version</span><br><span class="line">java version &quot;1.7.0_67&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.7.0_67-b01)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 24.65-b04, mixed mode)</span><br><span class="line">4.启动Tomcat</span><br><span class="line">[root@tomcat ~]# /usr/local/tomcat/bin/startup.sh</span><br><span class="line">(如何关闭呢:[root@qianfeng ~]# /usr/local/tomcat/bin/shutdown.sh)</span><br><span class="line">5.检查是否启动成功</span><br><span class="line">[root@tomcat ~]# netstat -tnlp | grep java</span><br><span class="line">tcp 0 0 ::ffff:127.0.0.1:8005 :::* LISTEN 6191/java</span><br><span class="line">tcp 0 0 :::8009 :::* LISTEN 6191/java</span><br><span class="line">tcp 0 0 :::8080 :::* LISTEN 6191/java</span><br><span class="line"><span class="meta">#</span><span class="bash"> 拷贝项目代码</span></span><br><span class="line">[root@tomcat ~]# rz</span><br><span class="line">[root@tomcat ~]# unzip jspgouV6-ROOT.zip </span><br><span class="line">[root@tomcat ~]# cp -r ROOT/ /usr/local/tomcat/webapps/</span><br><span class="line">[root@tomcat ~]# yum install -y mysql  # 安装mysql客户端</span><br><span class="line">[root@tomcat ~]# mysql -p&#x27;QianFeng@1234&#x27; -h 10.3.131.239</span><br><span class="line">MySQL [(none)]&gt; use jspgou</span><br><span class="line">MySQL [jspgou]&gt; source jspgou.sql</span><br><span class="line">[root@tomcat ~]# vim /usr/local/tomcat/webapps/ROOT/WEB-INF/config/jdbc.properties  # 修改下面的配置</span><br><span class="line">jdbc.url=jdbc:mysql://10.3.131.239:3306/jspgou?characterEncoding=UTF-8</span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=QianFeng@123</span><br></pre></td></tr></table></figure><h6 id="mysql部署"><a href="#mysql部署" class="headerlink" title="mysql部署"></a>mysql部署</h6><p>主服务器yum安装</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">清理安装环境：</span><br><span class="line"><span class="meta">#</span><span class="bash"> yum erase mariadb mariadb-server mariadb-libs mariadb-devel -y</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> userdel -r mysql</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rm -rf /etc/my*</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rm -rf /var/lib/mysql</span></span><br><span class="line">[root@mysql1 ~]# wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span><br><span class="line">[root@mysql1 ~]# yum -y localinstall mysql80-community-release-el7-3.noarch.rpm </span><br><span class="line">[root@mysql1 ~]# vim /etc/yum.repos.d/mysql-community.repo </span><br><span class="line">[mysql57-community]</span><br><span class="line">name=MySQL 5.7 Community Server</span><br><span class="line">baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/7/$basearch/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class="line"></span><br><span class="line">[mysql80-community]</span><br><span class="line">name=MySQL 8.0 Community Server</span><br><span class="line">baseurl=http://repo.mysql.com/yum/mysql-8.0-community/el/7/$basearch/</span><br><span class="line">enabled=0</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span><br><span class="line"></span><br><span class="line">[root@mysql1 ~]# yum -y install mysql-community-server</span><br><span class="line">[root@mysql1 ~]# systemctl start mysqld</span><br><span class="line">[root@mysql1 ~]# grep passw /var/log/mysqld.log </span><br><span class="line">2019-12-20T04:55:41.379206Z 1 [Note] A temporary password is generated for root@localhost: 6wis,KB.yhLk</span><br><span class="line">[root@mysql1 ~]# mysqladmin  -p&#x27;6wis,KB.yhLk&#x27; password &#x27;QianFeng@123&#x27;</span><br><span class="line">[root@mysql1 ~]# mysql -p&#x27;QianFeng@123&#x27;</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database jspgou default charset=utf8;</span></span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> grant all on *.* to <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;QianFeng@1234&#x27;</span>;</span></span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.05 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> flush privileges;</span></span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="nginx-代理后端tomcat"><a href="#nginx-代理后端tomcat" class="headerlink" title="nginx 代理后端tomcat"></a>nginx 代理后端tomcat</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 将老的架构中的nginxupstream指向后端tomcat</span></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    sendfile        on;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line">upstream testweb &#123;</span><br><span class="line">        server 10.3.131.236:8080 weight=1 max_fails=1 fail_timeout=2s;</span><br><span class="line">&#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">    location / &#123;</span><br><span class="line">       proxy_pass http://testweb;</span><br><span class="line">       proxy_set_header Host $host:$server_port;</span><br><span class="line">       proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h6><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-HwTXyMA4-1577026511139)(C:\Users\newrain\AppData\Roaming\Typora\typora-user-images\1576822364949.png)]</p><h1 id="第三次架构测试，tomcat集群"><a href="#第三次架构测试，tomcat集群" class="headerlink" title="第三次架构测试，tomcat集群"></a>第三次架构测试，tomcat集群</h1><h6 id="环境准备-2"><a href="#环境准备-2" class="headerlink" title="环境准备"></a>环境准备</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tomcat 集群两台，每台4实例</span><br><span class="line">ip ip 10.3.131.236 10.3.131.237</span><br><span class="line">端口采用 8081、8082、8083、8084</span><br><span class="line">主机名 tomcat  tomcat2</span><br></pre></td></tr></table></figure><h6 id="环境部署-1"><a href="#环境部署-1" class="headerlink" title="环境部署"></a>环境部署</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 部署多实例</span></span><br><span class="line">[root@tomcat ~]# cd /usr/local/</span><br><span class="line">[root@tomcat local]# ls</span><br><span class="line">bin  etc  games  include  java  lib  lib64  libexec  sbin  share  src  tomcat</span><br><span class="line">[root@tomcat local]# cp -r tomcat tomcat1</span><br><span class="line">[root@tomcat local]# cp -r tomcat tomcat2</span><br><span class="line">[root@tomcat local]# cp -r tomcat tomcat3</span><br><span class="line">[root@tomcat local]# ls</span><br><span class="line">bin  etc  games  include  java  lib  lib64  libexec  sbin  share  src  tomcat  tomcat1  tomcat2  tomcat3</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编写修改脚本并执行，此脚本用于生成启动管理脚本</span></span><br><span class="line">[root@tomcat local]# vim mod-tomcat.sh</span><br><span class="line">sed -i &#x27;s#8005#8011#;s#8080#8081#;s#8009#8019#&#x27; /usr/local/tomcat/conf/server.xml</span><br><span class="line">sed -i &#x27;s#8005#8012#;s#8080#8082#;s#8009#8029#&#x27; /usr/local/tomcat1/conf/server.xml</span><br><span class="line">sed -i &#x27;s#8005#8013#;s#8080#8083#;s#8009#8039#&#x27; /usr/local/tomcat2/conf/server.xml</span><br><span class="line">sed -i &#x27;s#8005#8014#;s#8080#8084#;s#8009#8049#&#x27; /usr/local/tomcat3/conf/server.xml</span><br><span class="line">cat &gt;/usr/local/tomcat/bin/start.sh &lt;&lt;&#x27;EOF&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">tomcat</span></span><br><span class="line">export CATALINA_BASE=&quot;/usr/local/tomcat&quot;</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">start)</span><br><span class="line">    $CATALINA_BASE/bin/startup.sh</span><br><span class="line">    ;;</span><br><span class="line">stop)</span><br><span class="line">    $CATALINA_BASE/bin/shutdown.sh</span><br><span class="line">esac</span><br><span class="line">EOF</span><br><span class="line">cat &gt;/usr/local/tomcat1/bin/start.sh &lt;&lt;&#x27;EOF&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">tomcat1</span></span><br><span class="line">export CATALINA_BASE=&quot;/usr/local/tomcat1&quot;</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">start)</span><br><span class="line">    $CATALINA_BASE/bin/startup.sh</span><br><span class="line">    ;;</span><br><span class="line">stop)</span><br><span class="line">    $CATALINA_BASE/bin/shutdown.sh</span><br><span class="line">esac</span><br><span class="line">EOF</span><br><span class="line">cat &gt;/usr/local/tomcat2/bin/start.sh &lt;&lt;&#x27;EOF&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">tomcat2</span></span><br><span class="line">export CATALINA_BASE=&quot;/usr/local/tomcat2&quot;</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">start)</span><br><span class="line">    $CATALINA_BASE/bin/startup.sh</span><br><span class="line">    ;;</span><br><span class="line">stop)</span><br><span class="line">    $CATALINA_BASE/bin/shutdown.sh</span><br><span class="line">esac</span><br><span class="line">EOF</span><br><span class="line">cat &gt;/usr/local/tomcat3/bin/start.sh &lt;&lt;&#x27;EOF&#x27;</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">tomcat3</span></span><br><span class="line">export CATALINA_BASE=&quot;/usr/local/tomcat3&quot;</span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">start)</span><br><span class="line">    $CATALINA_BASE/bin/startup.sh</span><br><span class="line">    ;;</span><br><span class="line">stop)</span><br><span class="line">    $CATALINA_BASE/bin/shutdown.sh</span><br><span class="line">esac</span><br><span class="line">EOF</span><br><span class="line">chmod 777 /usr/local/&#123;tomcat,tomcat1,tomcat2,tomcat3&#125;/bin/start.sh</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 第二个脚本，此脚本用于启动或关闭tomcat</span></span><br><span class="line">[root@tomcat local]# vim re-tomcat.sh</span><br><span class="line">/usr/local/tomcat/bin/start.sh $1</span><br><span class="line">/usr/local/tomcat1/bin/start.sh $1</span><br><span class="line">/usr/local/tomcat2/bin/start.sh $1</span><br><span class="line">/usr/local/tomcat3/bin/start.sh $1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看端口</span></span><br><span class="line">[root@tomcat local]# ss -tnlp</span><br><span class="line">State       Recv-Q Send-Q          Local Address:Port                         Peer Address:Port              </span><br><span class="line">users:((&quot;master&quot;,pid=1403,fd=13))LISTEN      0      100                      :::8080 </span><br><span class="line">users:((&quot;java&quot;,pid=3708,fd=43))LISTEN      0      100                        :::8049   </span><br><span class="line">users:((&quot;java&quot;,pid=4849,fd=44))LISTEN      0      100                        :::8081</span><br><span class="line">users:((&quot;java&quot;,pid=4819,fd=43))LISTEN      0      100                        :::8082   </span><br><span class="line">users:((&quot;java&quot;,pid=4828,fd=43))LISTEN      0      100                        :::8083</span><br><span class="line">users:((&quot;java&quot;,pid=4839,fd=43))LISTEN      0      100                        :::8019</span><br><span class="line">users:((&quot;java&quot;,pid=4819,fd=44))LISTEN      0      100                        :::8084   </span><br><span class="line">users:((&quot;master&quot;,pid=1403,fd=14))LISTEN      0      100                      :::8029 </span><br><span class="line">users:((&quot;java&quot;,pid=4828,fd=44))LISTEN      0      1            ::ffff:127.0.0.1:8005   </span><br><span class="line">users:((&quot;java&quot;,pid=3708,fd=49))LISTEN      0      100                        :::8039   </span><br><span class="line">users:((&quot;java&quot;,pid=4839,fd=44))LISTEN      0      100                        :::8009</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> tomcat2 部署</span></span><br><span class="line">[root@tomcat2 ~]# cd /usr/local/</span><br><span class="line">[root@tomcat2 local]# scp -r 10.3.131.236:/usr/local/&#123;tomcat1,tomcat2,tomcat3,tomcat,java,re-tomcat.sh&#125; ./</span><br><span class="line">[root@tomcat2 local]# vim /etc/profile.d/jdk.sh</span><br><span class="line">JAVA_HOME=/usr/local/java</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export JAVA_HOME PATH</span><br><span class="line">CATALINA_HOME=/usr/local/tomcat</span><br><span class="line">export CATALINA_HOME</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> tomcat &amp;&amp; tomcat 1</span> </span><br><span class="line">[root@tomcat1 local]# sh /usr/local/re-tomcat.sh start</span><br><span class="line">[root@tomcat2 local]# sh /usr/local/re-tomcat.sh start</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="测试访问（8个端口全部访问）"><a href="#测试访问（8个端口全部访问）" class="headerlink" title="测试访问（8个端口全部访问）"></a>测试访问（8个端口全部访问）</h6><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-EAtrdsHP-1577026511140)(C:\Users\newrain\AppData\Roaming\Typora\typora-user-images\1576825666399.png)]</p><h6 id="nginx反向代理，代理tomcat集群"><a href="#nginx反向代理，代理tomcat集群" class="headerlink" title="nginx反向代理，代理tomcat集群"></a>nginx反向代理，代理tomcat集群</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 两台nginx上修改配置</span></span><br><span class="line">upstream testweb &#123;</span><br><span class="line">        server 10.3.131.236:8081 weight=1 max_fails=1 fail_timeout=2s;</span><br><span class="line">        server 10.3.131.236:8082 weight=1 max_fails=1 fail_timeout=2s;</span><br><span class="line">        server 10.3.131.236:8083 weight=1 max_fails=1 fail_timeout=2s;</span><br><span class="line">        server 10.3.131.236:8084 weight=1 max_fails=1 fail_timeout=2s;</span><br><span class="line">        server 10.3.131.237:8081 weight=1 max_fails=1 fail_timeout=2s;</span><br><span class="line">        server 10.3.131.237:8082 weight=1 max_fails=1 fail_timeout=2s;</span><br><span class="line">        server 10.3.131.237:8083 weight=1 max_fails=1 fail_timeout=2s;</span><br><span class="line">        server 10.3.131.237:8084 weight=1 max_fails=1 fail_timeout=2s;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><h1 id="第四次架构测试，mysql一主两从，增加读写分离"><a href="#第四次架构测试，mysql一主两从，增加读写分离" class="headerlink" title="第四次架构测试，mysql一主两从，增加读写分离"></a>第四次架构测试，mysql一主两从，增加读写分离</h1><h6 id="环境准备-3"><a href="#环境准备-3" class="headerlink" title="环境准备"></a>环境准备</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">centos 7.6 1台 部署单机两实例</span><br><span class="line">前端mysql做读写分离</span><br><span class="line">主库ip 10.3.131.239：3306</span><br><span class="line">从库ip 10.3.131.238：3306,3307</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="环境部署-2"><a href="#环境部署-2" class="headerlink" title="环境部署"></a>环境部署</h6><p>从库采用编译安装</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">清理安装环境：</span><br><span class="line"><span class="meta">#</span><span class="bash"> yum erase mariadb mariadb-server mariadb-libs mariadb-devel -y</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> userdel -r mysql</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rm -rf /etc/my*</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rm -rf /var/lib/mysql</span></span><br><span class="line">[root@mysql2 ~]# groupadd mysql</span><br><span class="line">[root@mysql2 ~]# useradd -r -g mysql -M -s /bin/false mysql</span><br><span class="line">[root@mysql2 ~]# yum -y install ncurses ncurses-devel openssl-devel bison gcc gcc-c++ make cmake  # mysql 编译安装依赖 </span><br><span class="line">https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.12.tar.gz</span><br><span class="line">[root@mysql2 ~]# wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-boost-5.7.28.tar.gz</span><br><span class="line">[root@mysql2 ~]# tar xf mysql-boost-5.7.28.tar.gz</span><br><span class="line">[root@mysql2 ~]# cd mysql-5.7.28/</span><br><span class="line">[root@mysql2 ~]# mkdir /data  # 数据目录</span><br><span class="line">[root@mysql2 ~]# cmake . \</span><br><span class="line">-DWITH_BOOST=boost \</span><br><span class="line">-DCMAKE_INSTALL_PREFIX=/usr/local/mysql \</span><br><span class="line">-DSYSCONFDIR=/etc \</span><br><span class="line">-DMYSQL_DATADIR=/data \</span><br><span class="line">-DINSTALL_MANDIR=/usr/share/man \</span><br><span class="line">-DMYSQL_TCP_PORT=3306 \</span><br><span class="line">-DMYSQL_UNIX_ADDR=/tmp/mysql.sock \</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line">-DEXTRA_CHARSETS=all \</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci \</span><br><span class="line">-DWITH_READLINE=1 \</span><br><span class="line">-DWITH_SSL=system \</span><br><span class="line">-DWITH_EMBEDDED_SERVER=1 \</span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1</span><br><span class="line"></span><br><span class="line">[root@mysql2 ~]# make &amp;&amp; make install</span><br><span class="line">[root@mysql2 ~]# cd /usr/local/mysql</span><br><span class="line">[root@mysql2 mysql]# chown -R mysql.mysql .</span><br><span class="line"><span class="meta">#</span><span class="bash"> 第一个实例配置</span></span><br><span class="line">[root@mysql2 mysql]# ./bin/mysqld --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/data</span><br><span class="line">[root@mysql2 mysql]#  bin/mysql_ssl_rsa_setup --datadir=/data</span><br><span class="line">[root@mysql2 mysql]# vim /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/data</span><br><span class="line">[root@mysql2 mysql]# bin/mysqld_safe --user=mysql &amp;</span><br><span class="line">[root@mysql2 mysql]# cat /etc/profile.d/mysql.sh</span><br><span class="line">PATH=$PATH:/usr/local/mysql/bin </span><br><span class="line">[root@mysql2 mysql]# source ~/.bash_profile</span><br><span class="line">[root@mysql2 mysql]# cp support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">[root@mysql2 mysql]# chkconfig --add mysqld</span><br><span class="line">[root@mysql2 mysql]# chkconfig mysqld on</span><br><span class="line">[root@mysql2 mysql]# service mysqld start</span><br><span class="line">[root@mysql2 mysql]# mysqladmin -p&#x27;vuXciQ9d9n&lt;;&#x27; password &#x27;QianFeng@123&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 第二个实例配置</span></span><br><span class="line">[root@mysql2 ~]# cat /etc/my.cnf </span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/data</span><br><span class="line">port=3306</span><br><span class="line">socket=/tmp/mysql.sock</span><br><span class="line">symbolic-links=0</span><br><span class="line">user=mysql</span><br><span class="line"></span><br><span class="line">[root@mysql2 ~]# cat /etc/my2.cnf </span><br><span class="line">[mysqld]</span><br><span class="line">basedir=/usr/local/mysql</span><br><span class="line">datadir=/data2</span><br><span class="line">port=3307</span><br><span class="line">socket=/tmp/mysql2.sock</span><br><span class="line">symbolic-links=0</span><br><span class="line">user=mysql</span><br><span class="line"></span><br><span class="line">[root@mysql2 mysql]# mkdir /data2</span><br><span class="line"><span class="meta">#</span><span class="bash"> 初始化实例2</span></span><br><span class="line">[root@mysql2 mysql]# mysqld --defaults-file=/etc/my2.cnf --initialize --user=mysql --basedir=/usr/local/mysql --datadir=/data2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 编写脚本管理数据库</span></span><br><span class="line">[root@mysql2 ~]# cat /usr/bin/mod-mysql </span><br><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mysql2</span></span><br><span class="line">if [[ $# -ne 1 ]];then</span><br><span class="line">echo &quot;错误的参数个数&quot;</span><br><span class="line">exit 1</span><br><span class="line">fi</span><br><span class="line">case $1 in</span><br><span class="line">imysql2)</span><br><span class="line">mysql -uroot -p&#x27;QianFeng!123&#x27; -P 3307 -S /tmp/mysql2.sock</span><br><span class="line">;;</span><br><span class="line"><span class="meta">#</span><span class="bash"> mysql1</span></span><br><span class="line">imysql1)</span><br><span class="line">mysql -uroot -p&#x27;QianFeng@123&#x27;</span><br><span class="line">;;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line">smysql2)</span><br><span class="line">nohup /usr/local/mysql/bin/mysqld --defaults-file=/etc/my2.cnf --datadir=/data2/ --user=mysql &amp;</span><br><span class="line">;;</span><br><span class="line">smysql1)</span><br><span class="line">service mysqld start</span><br><span class="line">;;</span><br><span class="line">tmysql1)</span><br><span class="line">service mysqld stop</span><br><span class="line">;;</span><br><span class="line">tmysql2)</span><br><span class="line">mysqladmin -S /tmp/mysql2.sock -P 3307 -p&#x27;QianFeng!123&#x27; shutdown</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改密码</span></span><br><span class="line">[root@mysql2 ~]# mysqladmin -uroot -p&#x27;sNW7Tlr??c%-&#x27; password &#x27;QianFeng!123&#x27; -P 3307 -S /tmp/mysql2.sock</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="主从同步"><a href="#主从同步" class="headerlink" title="主从同步"></a>主从同步</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 主库</span></span><br><span class="line">[root@mysql1 ~]# mkdir -pv /data/binlog</span><br><span class="line">[root@mysql1 ~]# chown -R mysql /data/binlog</span><br><span class="line">[root@mysql1 ~]# cat /etc/my.cnf</span><br><span class="line">server-id=1</span><br><span class="line">log_bin=/data/binlog/mysql-bin.log   #(注意mysql需要有该目录写权限, chown mysql binlog/)</span><br><span class="line">expire_logs_days=3</span><br><span class="line">max_binlog_size=100M </span><br><span class="line">binlog_format=row  #(指定binlog格式  有row mixed等3种格式) </span><br><span class="line">max_allowed_packet=32M</span><br><span class="line"></span><br><span class="line">[root@mysql1 ~]# systemctl restart mysqld</span><br><span class="line">[root@mysql1 ~]# mysql -pQianFeng@123</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> grant replication slave,replication client on *.* to <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified by <span class="string">&#x27;QianFeng@@123&#x27;</span>;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 记录偏移量</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show master status\G</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">             File: mysql-bin.000001</span><br><span class="line">         Position: 458</span><br><span class="line">     Binlog_Do_DB: </span><br><span class="line"> Binlog_Ignore_DB: </span><br><span class="line">Executed_Gtid_Set: </span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">set</span> global event_scheduler=off;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> FLUSH TABLES WITH READ LOCK;</span></span><br><span class="line">(注意：在退出MySQL终端的时候都会隐式的执行unlock tables。也就是如果要让表锁定生效就必须一直保持对话。锁表之前确认mysql只剩下自己的操作)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 另开一个终端，不要关闭已经上锁的mysql终端</span></span><br><span class="line">[root@mysql1 ~]# mysqldump -R -E --default-character-set=utf8 -uroot -p&#x27;QianFeng@123&#x27; jspgou &gt; data.sql</span><br><span class="line">[root@mysql1 ~]# scp data.sql 10.3.131.238:/root/data.sql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 两台从库</span></span><br><span class="line">[root@mysql2 ~]# mkdir /&#123;data,data2&#125;/binlog</span><br><span class="line">[root@mysql2 ~]# chown mysql /&#123;data,data2&#125;/binlog</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改配置文件</span></span><br><span class="line">[root@mysql2 ~]# vim /etc/my.cnf</span><br><span class="line">event_scheduler=0  #关闭event归档，0为关闭</span><br><span class="line"><span class="meta">#</span><span class="bash">slave</span></span><br><span class="line">server-id=2</span><br><span class="line"><span class="meta">#</span><span class="bash">replicate-rewrite-db=dbname1-&gt;dbname1  同步单个库使用</span></span><br><span class="line"><span class="meta">#</span><span class="bash">replicate-do-db=dbname1                同步单个库使用</span></span><br><span class="line">log_bin=/data/binlog/mysql-bin.log</span><br><span class="line">relay_log=/data/binlog/mysql-relay-bin.log</span><br><span class="line">expire_logs_days=3</span><br><span class="line">max_binlog_size=100M</span><br><span class="line">binlog_format=row </span><br><span class="line">slave-net-timeout=60 </span><br><span class="line">max_allowed_packet=32M</span><br><span class="line">log_bin_trust_function_creators=1</span><br><span class="line"></span><br><span class="line">[root@mysql2 ~]# vim /etc/my2.cnf</span><br><span class="line">event_scheduler=0  #关闭event归档，0为关闭</span><br><span class="line"><span class="meta">#</span><span class="bash">slave</span></span><br><span class="line">server-id=3</span><br><span class="line"><span class="meta">#</span><span class="bash">replicate-rewrite-db=dbname1-&gt;dbname1  同步单个库使用</span></span><br><span class="line"><span class="meta">#</span><span class="bash">replicate-do-db=dbname1                同步单个库使用</span></span><br><span class="line">log_bin=/data2/binlog/mysql-bin.log</span><br><span class="line">relay_log=/data2/binlog/mysql-relay-bin.log</span><br><span class="line">expire_logs_days=3</span><br><span class="line">max_binlog_size=100M</span><br><span class="line">binlog_format=row </span><br><span class="line">slave-net-timeout=60 </span><br><span class="line">max_allowed_packet=32M</span><br><span class="line">log_bin_trust_function_creators=1</span><br><span class="line"></span><br><span class="line">[root@mysql2 ~]# mod-mysql tmysql1</span><br><span class="line">[root@mysql2 ~]# mod-mysql tmysql2</span><br><span class="line">[root@mysql2 ~]# mod-mysql smysql1</span><br><span class="line">[root@mysql2 ~]# mod-mysql smysql2</span><br><span class="line">[root@mysql2 ~]# mod-mysql imysql1</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database jspgou default charset=utf8;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> use jspgou</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">source</span> /root/data.sql</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> edit</span></span><br><span class="line">change master to </span><br><span class="line">master_host=&#x27;10.3.131.239&#x27;,</span><br><span class="line">master_user=&#x27;slave&#x27;,</span><br><span class="line">master_password=&#x27;QianFeng@@123&#x27;,</span><br><span class="line">master_log_file=&#x27;mysql-bin.000001&#x27;,</span><br><span class="line">master_log_pos=458;</span><br><span class="line">[root@mysql2 ~]# mod-mysql imysql2</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> create database jspgou default charset=utf8;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> use jspgou</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">source</span> /root/data.sql</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> edit</span></span><br><span class="line">change master to </span><br><span class="line">master_host=&#x27;10.3.131.239&#x27;,</span><br><span class="line">master_user=&#x27;slave&#x27;,</span><br><span class="line">master_password=&#x27;QianFeng@@123&#x27;,</span><br><span class="line">master_log_file=&#x27;mysql-bin.000001&#x27;,</span><br><span class="line">master_log_pos=458;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 检查两台同步情况</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> start slave;</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show slave status\G</span></span><br><span class="line"></span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000001</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="读写分离"><a href="#读写分离" class="headerlink" title="读写分离"></a>读写分离</h6><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-ao8VvmxI-1577026511141)(C:\Users\newrain\AppData\Roaming\Typora\typora-user-images\1576831880149.png)]</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mycat ip 10.3.131.244</span><br><span class="line"><span class="meta">#</span><span class="bash"> 环境部署</span></span><br><span class="line">将jdk上传到服务器中，</span><br><span class="line">[root@mycat ~]# tar xf jdk-7u67-linux-x64.tar.gz -C /usr/local/</span><br><span class="line">[root@mycat ~]# cd /usr/local/</span><br><span class="line">[root@mycat local]# mv jdk1.7.0_67 java </span><br><span class="line">设置环境变量</span><br><span class="line">[root@mycat local]# vim /etc/profile.d/java.sh  #添加如下内容，</span><br><span class="line">JAVA_HOME=/usr/local/java</span><br><span class="line">PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">[root@mycat local]# source /etc/profile.d/java.sh</span><br><span class="line">下载</span><br><span class="line">[root@mycat ~]# wget http://dl.mycat.io/1.6.5/Mycat-server-1.6.5-release-20180122220033-linux.tar.gz</span><br><span class="line">解压</span><br><span class="line">[root@mycat ~]# tar xf Mycat-server-1.6.5-release-20180122220033-linux.tar.gz -C /usr/local/</span><br><span class="line"><span class="meta">#</span><span class="bash">检测java</span></span><br><span class="line">[root@mycat ~]# java -version</span><br><span class="line">java version &quot;1.7.0_67&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.7.0_67-b01)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 24.65-b04, mixed mode)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改tomcat 配置文件</span></span><br><span class="line">[root@mycat ~]# cat /usr/local/mycat/conf/server.xml </span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE mycat:server SYSTEM &quot;server.dtd&quot;&gt;</span><br><span class="line">&lt;mycat:server xmlns:mycat=&quot;http://io.mycat/&quot;&gt;</span><br><span class="line">&lt;user name=&quot;root&quot; defaultAccount=&quot;true&quot;&gt;</span><br><span class="line">&lt;property name=&quot;password&quot;&gt;QianFeng@1234&lt;/property&gt;</span><br><span class="line">&lt;property name=&quot;schemas&quot;&gt;jspgou&lt;/property&gt;</span><br><span class="line">&lt;/user&gt;</span><br><span class="line">&lt;/mycat:server&gt;</span><br><span class="line"></span><br><span class="line">[root@mycat ~]# cat /usr/local/mycat/conf/schema.xml </span><br><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE mycat:schema SYSTEM &quot;schema.dtd&quot;&gt;</span><br><span class="line">&lt;mycat:schema xmlns:mycat=&quot;http://io.mycat/&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;schema name=&quot;jspgou&quot; checkSQLschema=&quot;false&quot; sqlMaxLimit=&quot;100&quot; dataNode=&quot;dn1&quot;&gt;</span><br><span class="line">&lt;/schema&gt;</span><br><span class="line">&lt;dataNode name=&quot;dn1&quot; dataHost=&quot;localhost1&quot; database=&quot;jspgou&quot; /&gt;</span><br><span class="line">&lt;dataHost name=&quot;localhost1&quot; maxCon=&quot;1000&quot; minCon=&quot;10&quot; balance=&quot;0&quot;</span><br><span class="line">  writeType=&quot;0&quot; dbType=&quot;mysql&quot; dbDriver=&quot;native&quot; switchType=&quot;1&quot;  slaveThreshold=&quot;100&quot;&gt;</span><br><span class="line">&lt;heartbeat&gt;select user()&lt;/heartbeat&gt;</span><br><span class="line">&lt;!-- can have multi write hosts --&gt;</span><br><span class="line">&lt;writeHost host=&quot;hostM1&quot; url=&quot;10.3.131.239:3306&quot; user=&quot;mycat&quot;</span><br><span class="line">   password=&quot;QianFeng@123&quot;&gt;</span><br><span class="line">&lt;!-- can have multi read hosts --&gt;</span><br><span class="line">&lt;readHost host=&quot;hostS2&quot; url=&quot;10.3.131.238:3306&quot; user=&quot;mycat&quot; password=&quot;QianFeng@123&quot; /&gt;</span><br><span class="line">&lt;readHost host=&quot;hostS3&quot; url=&quot;10.3.131.238:3307&quot; user=&quot;mycat&quot; password=&quot;QianFeng@123&quot; /&gt;</span><br><span class="line">&lt;/writeHost&gt;</span><br><span class="line">&lt;/dataHost&gt;</span><br><span class="line">&lt;/mycat:schema&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动mycat</span></span><br><span class="line">[root@mycat ~]# /usr/local/mycat/bin/mycat </span><br><span class="line">[root@mycat ~]# jps</span><br><span class="line">1796 WrapperSimpleApp</span><br><span class="line">1996 Jps</span><br><span class="line"></span><br><span class="line">[root@mycat conf]# mysql -uroot -p&#x27;QianFeng@1234&#x27; -h 10.3.131.244 -P 8066</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 3</span><br><span class="line">Server version: 5.6.29-mycat-1.6.5-release-20180122220033 MyCat Server (OpenCloundDB)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MySQL [(none)]&gt; show databases;</span><br><span class="line">+----------+</span><br><span class="line">| DATABASE |</span><br><span class="line">+----------+</span><br><span class="line">| jspgou   |</span><br><span class="line">+----------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">MySQL [(none)]&gt; use jspgou</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MySQL [jspgou]&gt; show tables;</span><br><span class="line">。。。。</span><br><span class="line">104 rows in set (0.01 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 完成</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改tomcat 的数据库配置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 两台tomcat 都执行</span></span><br><span class="line">[root@tomcat local]# sed -i &#x27;s#10.3.131.239#10.3.131.244#&#x27; tomcat/webapps/ROOT/WEB-INF/config/jdbc.properties </span><br><span class="line">[root@tomcat local]# sed -i &#x27;s#10.3.131.239#10.3.131.244#&#x27; tomcat1/webapps/ROOT/WEB-INF/config/jdbc.properties </span><br><span class="line">[root@tomcat local]# sed -i &#x27;s#10.3.131.239#10.3.131.244#&#x27; tomcat2/webapps/ROOT/WEB-INF/config/jdbc.properties </span><br><span class="line">[root@tomcat local]# sed -i &#x27;s#10.3.131.239#10.3.131.244#&#x27; tomcat3/webapps/ROOT/WEB-INF/config/jdbc.properties</span><br><span class="line"></span><br><span class="line">重启tomcat  </span><br><span class="line">[root@tomcat local]# sh /usr/local/re-tomcat.sh stop</span><br><span class="line">[root@tomcat local]# sh /usr/local/re-tomcat.sh start</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h3 id="集群介绍"><a href="#集群介绍" class="headerlink" title="集群介绍"></a>集群介绍</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">nginx---tomcat 4实例             mysql 从</span><br><span class="line">前端 lvs ---                 ---mycat--- mysql 主</span><br><span class="line">nginx---tomcat 4实例             mysql 从</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 账号密码信息</span></span><br><span class="line">lvs dip  10.3.131.76  vip 10.3.131.235</span><br><span class="line">nginx 1   ip 10.3.131.231</span><br><span class="line">nginx 2   ip 10.3.131.230</span><br><span class="line">mysql 主  ip 10.3.131.239 用户 slave QianFeng@@123(主从) 用户root QianFeng@123 用户 mycat QianFeng@123</span><br><span class="line">mysql 从  ip 10.3.131.238 用户m1上 root QianFeng@123 m2上 root QianFeng!123 mycat QianFeng@123（相同）</span><br><span class="line">mycat     ip 10.3.131.244 用户 root  QianFeng@1234</span><br><span class="line">tomcat 1  ip 10.3.131.236 端口 8081/8082/8083/8084</span><br><span class="line">tomcat 2  ip 10.3.131.237 端口 8081/8082/8083/8084</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># ssh登录账号root  密码为1</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 控制方式</span></span><br><span class="line">lvs systemctl start ipvsadm</span><br><span class="line">nginx /usr/local/nginx/sbin/nginx </span><br><span class="line">tomcat /usr/local/re-tomcat.sh start|stop</span><br><span class="line">mycat  /usr/local/mycat/bin/mycat  start|stop</span><br><span class="line">mysql主 systemctl start mysqld</span><br><span class="line">mysql从 mod-mysql imysql1|imysql2# 进入mysql客户端</span><br><span class="line">        mod-mysql smysql1|smysql2 # 启动mysql</span><br><span class="line">        mod-mysql tmysql1|tmysql2 # 停止myqsl   1和2是两个实例 mod-mysql是启动脚本</span><br><span class="line">       数据目录 /data  /data2  配置文件  /etc/my.cnf  /etc/my2.cnf</span><br><span class="line">       </span><br><span class="line"><span class="meta">#</span><span class="bash"> 测试页面</span></span><br><span class="line">http://10.3.131.235/jeeadmin/jspgou/index.do#/login</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> operations </category>
          
          <category> 架构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> 架构 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
